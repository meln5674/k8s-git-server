name: CI

env:
  CHARTS_DIR: charts
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: '**' 
    tags: '**'
  pull_request:
    branches: '**'
    tags: '**'
  workflow_dispatch: {}
jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: 'v1.13.1'

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1
      
      - name: Install YQ
        uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.27.2
     
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get Tag
        id: tagName
        uses: olegtarasov/get-tag@v2.1

      - name: Set Chart Version
        run: |
          if [ -n "${{ steps.tagName.outputs.tag }}" ]; then
            yq -i '.version = "${{ steps.tagName.outputs.tag }}"' '${{ env.CHARTS_DIR }}/k8s-git-server/Chart.yaml'
            yq -i '.appVersion = "${{ steps.tagName.outputs.tag }}"' '${{ env.CHARTS_DIR }}/k8s-git-server/Chart.yaml'
          else
            yq -i '.version = .version + "-'"${GITHUB_SHA}"'"' '${{ env.CHARTS_DIR }}/k8s-git-server/Chart.yaml'
            yq -i '.appVersion = "sha-'"${GITHUB_SHA}"'"' '${{ env.CHARTS_DIR }}/k8s-git-server/Chart.yaml'
          fi

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=long

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

      - name: Lint
        run: |
          helm lint '${{ env.CHARTS_DIR }}/k8s-git-server'
          helm template '${{ env.CHARTS_DIR }}/k8s-git-server'

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: '${{ env.CHARTS_DIR }}'

      - name: Smoke Test
        run: |
          helm repo add k8s-git-server https://meln5674.github.io/k8s-git-server/ --debug
          helm repo update --debug
          helm upgrade --install k8s-git-server k8s-git-server/k8s-git-server --values my-values.yaml --wait --debug
          helm test k8s-git-server --debug
          helm delete k8s-git-server --debug
