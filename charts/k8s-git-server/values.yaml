# Default values for k8s-git-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/meln5674/k8s-git-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 22

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: false
  size: 8Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: # None
  existingPersistentVolumeClaim:
    name: # None
# Git repos and users to create
git:
  users:
    # Name of the user to create
  - name: root
    # Repos to create for them
    repos:
      # Absolute path in the git server FS to create the repo at
    - path: /git
      # Optional: Source of an existing directory to push on install/upgrade. History will not be preserved, if any, and dirty files will also be committed
      # source:
      #   volume:
      #     persistentVolumeClaim:
      #       name: my-existing-claim
      #   volumeMount:
      #     subPath: path/in/volume
ssh:
  externalHosts:
  - '{{ include "k8s-git-server.fullname" . }}'
  - '{{ include "k8s-git-server.fullname" . }}.{{ .Release.Namespace }}'
  - '{{ include "k8s-git-server.fullname" . }}.{{ .Release.Namespace }}.svc'
  - '{{ include "k8s-git-server.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local'
  secrets:
    namePrefix: k8s-git-server
    nameSuffix: ''
    privateKeyKey: private_key
    publicKeyKey: private_key.pub
    knownHostsKey: known_hosts

tests:
  script: ''
